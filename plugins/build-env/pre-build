#!/usr/bin/env bash
set -eo pipefail; [[ $CREW_TRACE ]] && set -x
source "$(dirname $0)/../common/functions"

APP="$1"; IMAGE="crew/$APP"; BUILD_ENV=""

[[ -f "$CREW_ROOT/BUILD_ENV" ]] && cat "$CREW_ROOT/BUILD_ENV" >> "$CREW_ROOT/ENV" && rm "$CREW_ROOT/BUILD_ENV"

! (grep -q CURL_CONNECT_TIMEOUT "$CREW_ROOT/ENV" > /dev/null 2>&1) && echo "export CURL_CONNECT_TIMEOUT=5" >> "$CREW_ROOT/ENV"
! (grep -q CURL_TIMEOUT "$CREW_ROOT/ENV" > /dev/null 2>&1) && echo "export CURL_TIMEOUT=30" >> "$CREW_ROOT/ENV"

if [[ -f "$CREW_ROOT/ENV" ]]; then
  BUILD_ENV+=$'\n'
  BUILD_ENV+=$(< "$CREW_ROOT/ENV")
  BUILD_ENV+=$'\n'
fi
if [[ -f "$CREW_ROOT/$APP/ENV" ]]; then
  BUILD_ENV+=$'\n'
  BUILD_ENV+=$(< "$CREW_ROOT/$APP/ENV")
  BUILD_ENV+=$'\n'
fi

if [[ ! -z "$BUILD_ENV" ]]; then
  crew_log_info1 "Adding BUILD_ENV to build environment..."
  # create build env files for use in buildpacks like this:
  # https://github.com/niteoweb/heroku-buildpack-buildout/blob/5879fa3418f7d8e079f1aa5816ba1adde73f4948/bin/compile#L34
  id=$(echo $BUILD_ENV |sed -e 's@export @@g' -e 's@\\n@ @g' | docker run -i -a stdin $IMAGE /bin/bash -c "for ENV_VAR in $(cat); do echo \$ENV_VAR |sed 's@^\([^=]*\)=\(.*\)\$@echo \\\"\2\\\" >/tmp/env/\1@g' >>/tmp/set_env.sh; done && mkdir -p /tmp/env && /bin/bash /tmp/set_env.sh")
  test "$(docker wait $id)" -eq 0
  docker commit $id $IMAGE > /dev/null

  # create build env for 'old style' buildpacks and crew plugins
  id=$(echo -e "$BUILD_ENV" | docker run -i -a stdin $IMAGE /bin/bash -c "cat >> /app/.env")
  test "$(docker wait $id)" -eq 0
  docker commit $id $IMAGE > /dev/null
fi
